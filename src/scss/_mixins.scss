//**********************************************************
// Mixins
//----------------------------------------------------------
//
//**********************************************************

// Helpers
@mixin setPlaceholderGutter($prop) {
    %#{$prop} {
        @include setPropsAdaptive((
                #{$prop}: $grid_gap,
        ));

        &-half {
            @include setPropsAdaptive((
                    #{$prop}: $grid_gap_half,
            ));
        }

        &-0 {
            #{$prop}: 0;
        }

        @each $dir in $list_directions {
            &-#{$dir} {
                @include setPropsAdaptive((
                        #{$prop}-#{$dir}: $grid_gap,
                ));

                &-half {
                    @include setPropsAdaptive((
                            #{$prop}-#{$dir}: $grid_gap_half,
                    ));
                }

                &-0 {
                    #{$prop}-#{$dir}: 0;
                }
            }
        }
    }
}

@mixin setPropsAdaptive($props) {
    @each $key, $value in $props {
        @if $value > 0 {
            #{$key}: $value;
        }
    }

    @media only screen and (max-width: getBreakpoint($grid_column)) {
        @each $key, $value in $props {
            @if $value > 0 {
                #{$key}: $layout_rate * $value;
            } @else {
                #{$key}: 0;
            }
        }
    }
}

// Utilities

// Components

// Skins

// Layout

@use "sass:meta";
@mixin placeholder($name) {
    @if not meta.variable-exists($name) {
        //$placeholders: append($placeholders, $name) !global;

        @at-root {
            @each $breakpoint in $list_breakpoints {
                @media (min-width: $breakpoint) {
                    %#{$name}-#{$breakpoint} {
                        @content;
                    }
                }
            }

            %#{$name}-default-breakpoint {
                @content;
            }
        }
    } @else {
        @warn "Placeholder `#{$name}` already exists.";
    }
}