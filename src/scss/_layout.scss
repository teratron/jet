//**********************************************************
// Layout
//----------------------------------------------------------
//
// layout
//
// grid
// grid-0
// grid-[1...n]
// grid-b[1...n]-0
// grid-b[1...n]-[1...n]
//
// shrink
//
// gap
// gap-half
// gap-0
// gap-b[1...n]
// gap-b[1...n]-0
//
// order-[1...n]
// order-b[1...n]-[1...n]
//
// span-[1...n]
// span-b[1...n]-[1...n]
//
// row
// row-0
//
// col
// col-0
// col-[1...n]
// col-b[1...n]-0
// col-b[1...n]-[1...n]
//
// list
//
// bar
//
//**********************************************************
//@import "mixins/bar";
//@import "mixins/list";

// Layout
.#{$prefix}layout {
    width:        100%;
    max-width:    $layout_width;
    margin-left:  auto;
    margin-right: auto;
    @extend %#{$prefix}padding-left, %#{$prefix}padding-right;
}

// Grid
%#{$prefix}grid {
    @extend %#{$prefix}display-grid;
    grid-auto-rows: minmax($cell_width, auto);
}

//[class*=#{$prefix}grid],
.#{$prefix}grid {
    grid-auto-flow: row;
    @extend %#{$prefix}grid;
    @extend %#{$prefix}grid-gap;

    &-0 {
        @extend %#{$prefix}display-none;
    }
}

%#{$prefix}grid-child-width {
    //@extend %#{$prefix}reset-width;

    :first-child > & {
        @extend %#{$prefix}margin-top-0;
    }

    :only-child > &,
    :last-child > & {
        @extend %#{$prefix}margin-bottom-0;
    }
}

//%#{$prefix}reset-width {
//    width:     auto;
//    max-width: none;
//}

// Gap
.#{$prefix}gap {
    @extend %#{$prefix}grid-gap;
}

// Row
%#{$prefix}row {
    @extend %#{$prefix}grid;
    grid-template-columns: repeat(auto-fit, minmax($cell_width, auto));
    grid-auto-flow:        column;
}

.#{$prefix}row {
    @extend %#{$prefix}row;
    //@extend %#{$prefix}grid-child-width;

    &-0 {
        @extend %#{$prefix}display-none;
    }
}

.#{$prefix}bar {
    @extend %#{$prefix}row;
    //@include setBar(auto, $grid_gap_half);
}

// Column
%#{$prefix}col {
    @extend %#{$prefix}grid;
    grid-template-rows: repeat(auto-fit, minmax($cell_width, auto));
    grid-auto-flow:     dense;
}

.#{$prefix}col {
    @extend %#{$prefix}col;
    @extend %#{$prefix}grid-child-width;

    &-0 {
        @extend %#{$prefix}display-none;
    }
}

.#{$prefix}list {
    @extend %#{$prefix}col;
}

@for $i from 1 through $grid_column {
    .#{$prefix}grid-#{$i} {
        @extend .#{$prefix}grid;
        grid-template-columns: repeat($i, 1fr);
    }

    .#{$prefix}col-#{$i},
    .#{$prefix}grid-#{$i},
    .#{$prefix}grid-#{$i} > %#{$prefix}grid-child-width {
        grid-column-end: span $i;
    }

    .#{$prefix}span-#{$i} {
        grid-column-start: $i;
    }

    .#{$prefix}order-#{$i} {
        order: $i;
    }

    @for $j from 1 through $grid_column {
        .#{$prefix}grid-b#{$i}-#{$j} {
            @extend .#{$prefix}grid;
        }
    }
}

// Shrink
@if not $is_grid_gap {
    .#{$prefix}shrink {
        grid-template-columns: repeat(auto-fit, minmax(GetMinShrinkCellWidth(), 1fr));
    }
}

// Breakpoints
@for $i from $grid_column to 0 {
    @media only screen and (max-width: GetBreakpoint($i)) {
        @include pasteBuffer($i);

        %#{$prefix}col-b#{$i} {
            display: inherit;
        }

        %#{$prefix}grid-b#{$i} {
            display: grid;
        }

        .#{$prefix}col-b#{$i}-0,
        .#{$prefix}grid-b#{$i}-0 {
            display: none;
        }

        .#{$prefix}gap-b#{$i} {
            grid-gap: inherit;
        }

        .#{$prefix}gap-b#{$i}-0 {
            grid-gap: 0;
        }

        @for $j from 1 through $grid_column {
            %#{$prefix}grid-b#{$i}-#{$j},
            .#{$prefix}grid-b#{$i}-#{$j} {
                @extend %#{$prefix}grid-b#{$i};
                grid-template-columns: repeat($j, 1fr);
            }

            .#{$prefix}col-b#{$i}-#{$j},
            .#{$prefix}grid-b#{$i}-#{$j},
            .#{$prefix}grid-b#{$i}-#{$j} > %#{$prefix}grid-child-width {
                grid-column-end: span $j;
            }

            .#{$prefix}col-b#{$i}-#{$j} {
                @extend %#{$prefix}col-b#{$i};
            }

            .#{$prefix}span-b#{$i}-#{$j} {
                grid-column-start: $j;
            }

            .#{$prefix}order-b#{$i}-#{$j} {
                order: $j;
            }
        }

        @if $is_grid_gap and $i > 1 {
            .#{$prefix}shrink {
                grid-template-columns: repeat(auto-fit, minmax(GetMinShrinkCellWidth($i), 1fr));
            }
        }
    }
}
